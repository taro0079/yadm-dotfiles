snippet php
	<?php
	declare(strict_types=1);

	namespace ${1:Namespace};

	class ${2:className}
	{
		public function __construct(${4:arguments})
		{
			${0:Constructor}
		}
	}


snippet docvar
    /**
     * ${1:var}${2:description}
     *
     * @return ${3:type} ${1:var}
     */

snippet prop
    private ${1: type} $${1:var};

snippet ormcol
    #[ORM\Column(type: ${1:type}, name: "${2:column_name}", ${3:, options: ["default" => "${4:default_value}" ]})]
    private ${5: type} $${6:var};
    

snippet fn "function"
	public function ${1:methodName}(${2:arguments}): ${3:returnType}
    {
        ${0:${VISUAL}}    
    }

snippet create_test "create test method"
    /**
     * @test
     */
    public function ${1:testMethodName}(): void
    {
        ${0:${VISUAL}}
    }

snippet c
	class ${1:`vim_snippets#Filename()`}
	{
		${0:${VISUAL}}
	}
# this
snippet t.
	\$this->

# simple function
snippet f
	function ${1}(${3})
	{
		${0:${VISUAL}}
	}

snippet gm "PHP Class Getter"
	/**
	 * Gets the value of ${1:foo}
	 *
	 * @return ${2:string}
	 */
	${3:public} function get${4:$1}()
	{
		return $this->${5:$1};
	}

# 3項演算子
snippet =?:
	$${1:foo} = ${2:true} ? ${3:a} : ${4:b}

snippet ?:
	${1:true} ? ${2:a} : ${0}

# PHP DOC
snippet /*
	/**
	 * ${0}
	 */

# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @param ${5: param}
	 * @return ${6:void}
	 */
	${1}function ${2}(${3})
	{${0}
	}

snippet inits "constructor"
	public function __construct(${2:arguments})
	{
		${0}
	}
# Class ...
snippet class
	/**
	 * ${1}
	 */
	class ${2:`vim_snippets#Filename()`}
	{
		${3}
		/**
		 * ${4}
		 */
		${5:public} function ${6:__construct}(${7:argument})
		{
			${0}
		}
	}

# if statement
snippet if "if (condition) { ... }"
	if (${1}) {
		${0:${VISUAL}}
	}

# if not statement
snippet ifn "if (!condition) { ... }"
	if (!${1}) {
		${0:${VISUAL}}
	}


# if else statement
snippet ife "if (cond) { ... } else { ... }"
	if (${1}) {
		${0:${VISUAL}}
	} else {
		${2}
	}

# switch statement
snippet switch "switch($var) { case 'xyz': ... default: .... }"
	switch ($${1:variable}) {
		case '${2:value}':
			${3}
			break;
		${0}
		default:
			${4}
			break;
	}

# foreach statement
snippet foreach "foreach ($var as $value) { .. }"
	foreach ($${1:variable} as $${2:value}) {
		${0:${VISUAL}}
	}

snippet array "$... = ['' => ]"
	$${1:arrayName} = ['${2}' => ${3}];

# var_dump
snippet vd
	var_dump(${0});

snippet d "ddh"
	ddh(${0:val});
